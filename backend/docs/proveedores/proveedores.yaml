openapi: 3.0.0
info:
  title: API de Proveedores
  version: 1.0.0
  description: Endpoints para listar, registrar y actualizar proveedores. Requiere autenticación JWT y verificación de permisos.

servers:
  - url: http://localhost:5000
    description: Servidor local

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Proveedor:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nombre:
          type: string
          example: "Proveedor ABC"
        estado:
          type: boolean
          example: true

security:
  - bearerAuth: []

paths:
  /proveedores:
    get:
      summary: Obtener lista de proveedores
      description: Retorna una lista paginada y filtrada de proveedores. Requiere el permiso `ver_proveedores`.
      parameters:
        - in: query
          name: pagina
          schema:
            type: integer
            example: 1
          description: Número de página a consultar.
        - in: query
          name: resultados_por_pagina
          schema:
            type: integer
            example: 10
          description: Número de proveedores por página.
        - in: query
          name: nombre
          schema:
            type: string
            example: ABC
          description: Filtro por coincidencia parcial del nombre del proveedor (insensible a mayúsculas).
        - in: query
          name: estado
          schema:
            type: boolean
            example: true
          description: Filtrar por estado del proveedor (`true` para activos, `false` para inactivos).
      responses:
        "200":
          description: Lista de proveedores obtenida correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagina:
                    type: integer
                    example: 1
                  resultados_por_pagina:
                    type: integer
                    example: 10
                  total_resultados:
                    type: integer
                    example: 25
                  total_paginas:
                    type: integer
                    example: 3
                  proveedores:
                    type: array
                    items:
                      $ref: '#/components/schemas/Proveedor'
        "401":
          description: Token inválido o no enviado.
        "403":
          description: Permiso insuficiente.
        "500":
          description: Error interno del servidor.

    post:
      summary: Registrar un nuevo proveedor
      description: Registra un proveedor con su nombre. Requiere el permiso `registrar_proveedores`.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre
              properties:
                nombre:
                  type: string
                  example: "Proveedor XYZ"
      responses:
        "201":
          description: Proveedor registrado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor registrado exitosamente"
                  proveedor:
                    $ref: '#/components/schemas/Proveedor'
        "400":
          description: El nombre del proveedor es requerido.
        "401":
          description: Token inválido o no enviado.
        "403":
          description: Permiso insuficiente.
        "500":
          description: Error al registrar proveedor.

  /proveedores/{id}:
    patch:
      summary: Actualizar proveedor
      description: Permite actualizar nombre y/o estado de un proveedor. Requiere el permiso `modificar_proveedores`.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID del proveedor a actualizar.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  example: "Proveedor Actualizado"
                estado:
                  type: boolean
                  example: false
      responses:
        "200":
          description: Proveedor actualizado exitosamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Proveedor actualizado exitosamente"
                  proveedor:
                    $ref: '#/components/schemas/Proveedor'
        "400":
          description: No se proporcionó ningún campo para actualizar.
        "401":
          description: Token inválido o no enviado.
        "403":
          description: Permiso insuficiente.
        "404":
          description: Proveedor no encontrado.
        "500":
          description: Error al actualizar proveedor.
